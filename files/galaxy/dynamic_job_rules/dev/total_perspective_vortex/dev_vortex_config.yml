tools:
  __DATA_FETCH__:
    params:
      tmp_dir: True
  interactive_tool_.*:
    context:
      require_login: true
    cores: 2
    scheduling:
      require:
        - interactive_pulsar
  interactive_tool_rstudio:
    params:
      container_override:
      - type: docker
        shell: /bin/bash
        identifier: quay.io/natefoo/docker-rstudio-notebook:23.1-proxy1
  toolshed.g2.bx.psu.edu/repos/iuc/kraken2/kraken2/.*:
    # Galaxy Main's kraken2 memory rule
    cores: 16
    mem: |
      import os
      import functools
      from typing import Optional

      @functools.lru_cache(maxsize=128)
      def get_ref_size(lookup_value: str, table_name: str, lookup_column: str, value_column: str, value_template: str) -> Optional[int]:
          ref_size = None  # optional int will be None unless set
          try:
              table_value = app.tool_data_tables.get(table_name).get_entry(
                  lookup_column, lookup_value, value_column
              )
              if table_value is not None:
                  table_value = value_template.format(value=table_value)
                  ref_size = int(os.path.getsize(table_value) / 1024**3)
                  log.debug(
                      "Data table '%s' lookup '%s=%s: %s=%s': %s GB",
                      table_name, lookup_column, lookup_value,
                      value_column, table_value, ref_size
                  )
              else:
                  log.warning(
                      "Data table '%s' lookup '%s=%s: %s=None' returned None!, defaulting to %s",
                      table_name, lookup_column, lookup_value,
                      value_column, ref_size
                  )
          except OSError:
              log.exception("Failed to get size of: %s", table_value)
          return ref_size

      default_mem = 64
      options = job.get_param_values(app)
      lookup_value = options["kraken2_database"]

      ref_size = get_ref_size(
        lookup_value=lookup_value,
        table_name="kraken2_databases",
        lookup_column="value",
        value_column="path",
        value_template="{value}/hash.k2d",
      )
      min(ref_size * 1.2 + 48, 980) if ref_size is not None else default_mem
    params:
      singularity_enabled: true
    scheduling:
      accept:
        - pulsar
  __IMPORT_HISTORY__:
    params:
      tmp_dir: true
  toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/.*:
    cores: 5
    mem: 19.1
    params:
      singularity_enabled: true
  toolshed.g2.bx.psu.edu/repos/fubar/mashmap/mashmap/.*:
    mem: 16
  toolshed.g2.bx.psu.edu/repos/galaxyp/msconvert/msconvert/.*:
    #context:
    #  max_concurrent_job_count_for_tool_user: 1
    params:
      docker_enabled: true
      tmp_dir: true
  toolshed.g2.bx.psu.edu/repos/galaxyp/openms.*:
    params:
      singularity_enabled: true
  toolshed.g2.bx.psu.edu/repos/bgruening/bionano_scaffold/bionano_scaffold/.*:
    scheduling:
      accept:
        - pulsar
        - reservation-pulsar
      prefer:
        - pulsar-reservation-g2-xlarge-A
    params:
      docker_enabled: true
    cores: 8
  toolshed.g2.bx.psu.edu/repos/iuc/links/links/.*:
    params:
      singularity_enabled: true
      dependency_resolution: 'none'
    cores: 2
  toolshed.g2.bx.psu.edu/repos/iuc/fasta_stats/fasta-stats/.*:
    scheduling:
      accept:
        - pulsar
    cores: 2
  toolshed.g2.bx.psu.edu/repos/iuc/maker/maker/.*:
    scheduling:
      accept:
        - pulsar
    cores: 8
    mem: 30.39
    env:
      MAKER_MPI: "1"
  toolshed.g2.bx.psu.edu/repos/iuc/bbtools_callvariants/bbtools_callvariants/.*:
    scheduling:
      accept:
        - pulsar
    cores: 8
  toolshed.g2.bx.psu.edu/repos/iuc/bbtools_bbmap/bbtools_bbmap/.*:
    scheduling:
      accept:
        - pulsar
    cores: 16
  toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/*:
    params:
      singularity_enabled: true
    scheduling:
      accept:
        - pulsar
  toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/.*:
    cores: 6
    rules:
      - if: user.email == "pulsar_azure_0@genome.edu.au" and input_size < 10
        scheduling:
          require:
            - pulsar
            - pulsar-azure-0
        cores: 4
        mem: 15
        context:
          partition: small
      - if: user.email == "pulsar_azure_0@genome.edu.au" and input_size >= 10
        scheduling:
          require:
            - pulsar
            - pulsar-azure-0
        cores: 16
        mem: 60.8
        context:
          partition: medium

  toolshed.g2.bx.psu.edu/repos/bgruening/hifiasm/hifiasm/.*:
    scheduling:
      accept:
        - pulsar
    cores: 2
    rules:
      - if: input_size >= 0.2
        cores: 16
  toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/.*:
    cores: 2
    rules:
    - if: input_size >= 2
      cores: 3
  toolshed.g2.bx.psu.edu/repos/galaxyp/maxquant/maxquant/.*:
    cores: 2
    rules:
    - if: input_size >= 2
      scheduling:
        require:
          - pulsar
          - pulsar-nci-test
      cores: 12
      mem: 48
  toolshed.g2.bx.psu.edu/repos/bgruening/flye/flye/.*:
    cores: 8
    mem: 30.39
    scheduling:
      accept:
        - pulsar
    rules:
      - if: user.email == "pulsar_azure_0@genome.edu.au"
        cores: 120
        mem: 1900
        context:
          partition: special

  toolshed.g2.bx.psu.edu/repos/chemteam/gmx_sim/gmx_sim/.*:
    scheduling:
      accept:
        - pulsar
    cores: 4
  toolshed.g2.bx.psu.edu/repos/chemteam/gmx_solvate/gmx_solvate/.*:
    scheduling:
      accept:
        - pulsar
    cores: 4
  toolshed.g2.bx.psu.edu/repos/chemteam/gmx_setup/gmx_setup/.*:
    scheduling:
      accept:
        - pulsar
    cores: 4
  toolshed.g2.bx.psu.edu/repos/chemteam/gmx_editconf/gmx_editconf/.*:
    scheduling:
      accept:
        - pulsar
    cores: 4
  toolshed.g2.bx.psu.edu/repos/chemteam/gmx_em/gmx_em/.*:
    scheduling:
      accept:
        - pulsar
    cores: 4
  .*alphafold.*:  # match local or toolshed alphafold
    cores: 40
    mem: 107
    gpus: 1
    scheduling:
      accept:
        - pulsar
        - pulsar-eu-gpu-alpha
      require:
        - alphafold
    params:
      docker_enabled: true
      docker_volumes: '$job_directory:ro,$tool_directory:ro,$job_directory/outputs:rw,$working_directory:rw,/data/alphafold_databases:/data:ro'
      docker_sudo: false
      require_container: true
      docker_run_extra_arguments: "--gpus all --env ALPHAFOLD_AA_LENGTH_MIN=30 --env ALPHAFOLD_AA_LENGTH_MAX=2000"
      docker_set_user: '1000'
    rules:
      - if: user.email == "pulsar_azure_0@genome.edu.au"
        scheduling:
          require:
            - pulsar-azure-0
        cores: 6
        mem: 106
        context:
          partition: azuregpu1
      - if: user.email == "pulsar_azure_1@genome.edu.au"
        scheduling:
          require:
            - pulsar-azure-1
        cores: 8
        mem: 69
        context:
          partition: azuregpu1
      - if: user.email == "star@email.com"
        scheduling:
          require:
            - reservation-pulsar
        cores: 6 # there are 60, but match the regular alphafold
        mem: 106 # there is 120ish, but match the regular alphafold

  toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.9+galaxy1:
    cores: 2
    params:
      singularity_enabled: True
      singularity_volumes: '$defaults'
      singularity_default_container_id: '/cvmfs/singularity.galaxyproject.org/all/python:3.8.3'
  toolshed.g2.bx.psu.edu/repos/iuc/trinity/trinity/.*:
    scheduling:
      accept:
        - pulsar
    rules:
      - if: user.email == "pulsar_azure_0@genome.edu.au" and input_size < 0.1
        scheduling:
          require:
            - pulsar-azure-0
        cores: 4
        mem: 15
        context:
          partition: small
      - if: user.email == "pulsar_azure_0@genome.edu.au" and input_size >= 0.1
        scheduling:
          require:
            - pulsar-azure-0
        cores: 32
        mem: 121.6
        context:
          partition: large

  toolshed.g2.bx.psu.edu/repos/lparsons/htseq_count/htseq_count/.*:
    scheduling:
      require:
        - pulsar
        - pulsar-nci-test
    cores: 2
    params:
      singularity_enabled: True
      singularity_volumes: '$defaults'
      singularity_default_container_id: '/cvmfs/singularity.galaxyproject.org/all/python:3.8.3'
  toolshed.g2.bx.psu.edu/repos/galaxy-australia/cactus_cactus/cactus_cactus/.*:
    cores: 16
    mem: 32
    params:
      singularity_enabled: True
  toolshed.g2.bx.psu.edu/repos/galaxy-australia/cactus_export/cactus_export/.*:
    cores: 1
    params:
      singularity_enabled: True
  pbgcpp:
    cores: 2
    params:
      singularity_enabled: True
      singularity_volumes: '$defaults,/cvmfs:ro'
      singularity_default_container_id: '/cvmfs/singularity.galaxyproject.org/all/python:3.8.3'
  pbmm2:
    cores: 2
    params:
      singularity_enabled: True
      singularity_volumes: '$defaults,/cvmfs:ro'
      singularity_default_container_id: '/cvmfs/singularity.galaxyproject.org/all/python:3.8.3'
  cellranger:
    cores: 4
    params:
      singularity_enabled: True
      singularity_volumes: '$defaults,/cvmfs:ro'
  fgenesh:
    cores: 4
    params:
      singularity_enabled: True
      singularity_volumes: '$defaults,/cvmfs:ro'
  GlyComboCLI:
    cores: 4
    params:
      singularity_enabled: True
      singularity_volumes: '$defaults,/cvmfs:ro'
  toolshed.g2.bx.psu.edu/repos/iracooke/protk_proteogenomics/.*:
    cores: 1
    params:
      singularity_enabled: True
      singularity_run_extra_arguments: '--writable-tmpfs'
      dependency_resolution: 'none'
  toolshed.g2.bx.psu.edu/repos/iracooke/xtandem/.*:
    cores: 1
    params:
      singularity_enabled: True
      singularity_run_extra_arguments: '--writable-tmpfs'
      dependency_resolution: 'none'
  toolshed.g2.bx.psu.edu/repos/iracooke/protk-galaxytools/.*:
    cores: 1
    params:
      singularity_enabled: True
      singularity_run_extra_arguments: '--writable-tmpfs'
      dependency_resolution: 'none'
  toolshed.g2.bx.psu.edu/repos/iracooke/tpp_prophets/.*:
    cores: 1
    params:
      singularity_enabled: True
      singularity_run_extra_arguments: '--writable-tmpfs'
      dependency_resolution: 'none'
  maxquant_test:
    scheduling:
       require:
         - pulsar
         - pulsar-nci-test
    cores: 12
    mem: 48
  toolshed.g2.bx.psu.edu/repos/bgruening/chemfp/.*:
    params:
      singularity_enabled: True
  toolshed.g2.bx.psu.edu/repos/galaxy-australia/hifiadapterfilt/hifiadapterfilt/.*:
    scheduling:
       require:
         - pulsar
         - pulsar-nci-test
    cores: 8
    params:
      singularity_enabled: True
  toolshed.g2.bx.psu.edu/repos/iuc/busco/busco/.*:
    # context:
    #   minimum_singularity_version: 5.0.0+galaxy0  # not working, ref https://github.com/galaxyproject/total-perspective-vortex/pull/32
    rules:
      - if: |
          import packaging.version
          minimum_singularity_version = '5.0.0+galaxy0'
          packaging.version.parse(tool.version) >= packaging.version.parse(minimum_singularity_version)
        params:
          singularity_enabled: true
          dependency_resolution: none
  toolshed.g2.bx.psu.edu/repos/iuc/data_manager_salmon_index_builder/salmon_index_builder_data_manager/.*:
    mem: 60
    params:
      singularity_enabled: true

users:
  test_user:
    rules:
      - id: singularity_test_user_rule
        if: |
          enable_singularity = False
          if tool.id.startswith('toolshed') or tool.id.startswith('testtoolshed'):
            try:
              enable_singularity = 'singularity' in [hta.user_tname for hta in job.history.tags]
            except:
              pass
          enable_singularity
        params:
          singularity_enabled: True
          dependency_resolution: none
      - id: pulsar_test_user_rule
        if: |
          require_pulsar = False
          if tool.id.startswith('toolshed') or tool.id.startswith('testtoolshed'):
            try:
              require_pulsar = 'pulsar' in [hta.user_tname for hta in job.history.tags]
            except:
              pass
          require_pulsar
        scheduling:
          require:
            - pulsar
      - id: cvmfs_test_user_rule
        if: |
          tag = 'cvmfs'
          tag_present = False
          if tool.id.startswith('toolshed') or tool.id.startswith('testtoolshed'):
            try:
              tag_present = tag in [hta.user_tname for hta in job.history.tags]
            except:
              pass
          tag_present
        context:
          partition: cvmfs
      - id: s3fs_test_user_rule
        if: |
          tag = 's3fs'
          tag_present = False
          if tool.id.startswith('toolshed') or tool.id.startswith('testtoolshed'):
            try:
              tag_present = tag in [hta.user_tname for hta in job.history.tags]
            except:
              pass
          tag_present
        context:
          partition: s3fs
  star@email.com:
    rules:
      - if: tool.id not in ('__DATA_FETCH__', 'upload1')
        cores: 1
        mem: 4
        params:
          docker_enabled: true
          singularity_enabled: false
        scheduling:
          require:
            - cjb-pulsar

    # inherits: test_user
    # context:
    #   nodelist: dev-w1
    # params:
    #   object_store_id: dev_objects_scratch_test
    # scheduling:
    #   require:
    #     - slurm
  pulsar_user@usegalaxy.org.au:
    inherits: test_user
    max_cores: 2
    max_mem: 7.5
    rules:
      - if: tool.id.startswith('toolshed') or tool.id.startswith('testtoolshed')  # this locks out all local tools, might need to make exceptions for these by id
        scheduling:
          require:
            - pulsar  # if pulsar requires the pulsar tag, nothing without the pulsar tag will go there
            - dev-pulsar
  pulsar_nci_test_user@usegalaxy.org.au:
    inherits: test_user
    rules:
      - if: tool.id.startswith('toolshed') or tool.id.startswith('testtoolshed')
        scheduling:
          require:
            - pulsar
            - pulsar-nci-test
  eugpu@usegalaxy.org.au:
    rules:
      - if: tool.id.startswith('toolshed') or tool.id.startswith('testtoolshed') or tool.id == 'alphafold'
        scheduling:
          require:
            - pulsar
            - pulsar-eu-gpu-alpha
  jenkins_bot@usegalaxy.org.au:
    inherits: test_user
    max_cores: 1
    max_mem: 3.8
    scheduling:
      require:
        - slurm
  pulsar_azure_0@genome.edu.au:
    rules:
      - if: tool.id.startswith('toolshed') or tool.id.startswith('testtoolshed')
        scheduling:
          require:
            - pulsar
            - pulsar-azure-0
  pulsar_azure_1@genome.edu.au:
    rules:
      - if: |
          tool.id.startswith('toolshed') or tool.id.startswith('testtoolshed') or 'alphafold' in tool.id
        scheduling:
          require:
            - pulsar
            - pulsar-azure-1

  pulsar_azure_docker@genome.edu.au:
    rules:
      - if: tool.id.startswith('toolshed') or tool.id.startswith('testtoolshed')
        scheduling:
          require:
            - pulsar
            - pulsar-azure-docker
      - if: tool.id == 'alphafold'
        scheduling:
          accept:
            - pulsar
          require:
            - pulsar-azure-docker
        cores: 6
        mem: 105
        context:
          partition: azuregpu0 # azuregpu0 since azuregpu1 targets vet school subscription
