destinations:
  default:
    runner: slurm # abstract: this runner will be overridden
    abstract: true
    params:
    # having rules on default abstract dest then rules on descendant abstract dest seems to prevent the descendant rules from applying
    # rules:
    #   - id: default_destination_singularity_rule
    #     if: entity.params.get('singularity_enabled') # TODO: check that this is boolean and not string
    #     params:
    #         singularity_default_container_id: '{ singularity_default_container_id }'
    #   - id: default_destination_docker_rule 
    #     if: entity.params.get('docker_enabled')
    #     params:
    #         docker_memory: '{mem}G'
    #         docker_sudo: false
    scheduling:
      accept:
        - docker # to satisfy tools in shared db that have require: docker
        - singularity # to satisfy tools in shared db that have require: singularity
  _slurm_destination:
    abstract: true
    params:
        nativeSpecification: "--nodes=1 --ntasks={cores} --ntasks-per-node={cores} --mem={round(mem*1024)} --partition={partition}"
        metadata_strategy: extended
    rules:
      - id: slurm_destination_singularity_rule
        if: entity.params.get('singularity_enabled')
        params:
            singularity_volumes: '{ slurm_singularity_volumes }'
            singularity_default_container_id: '{ singularity_default_container_id }'
      - id: slurm_destination_docker_rule
        if: entity.params.get('docker_enabled')
        params:
            docker_volumes: '{ slurm_docker_volumes }'
            docker_memory: '{mem}G'
            docker_sudo: false
  _pulsar_destination:
    abstract: true
    params:
      job_working_directory: "{{ galaxy_pulsar_job_working_directory }}"  # TODO: overriding JWD here does not work, try to fix this
      submit_native_specification: "--nodes=1 --ntasks={cores} --ntasks-per-node={cores} --mem={round(mem*1024)} --partition={partition}"
      jobs_directory: /mnt/pulsar/files/staging # TODO: this could be a variable
      transport: curl
      remote_metadata: 'false'
      # metadata_strategy: 'extended' # TODO: this may work in future with remote_metadata set to true and galaxy venv on pulsar
      default_file_action: remote_transfer
      outputs_to_working_directory: false
      dependency_resolution: remote
      rewrite_parameters: 'true'
      persistence_directory: /mnt/pulsar/files/persisted_data # TODO: this could be a variable

    rules:
      - id: pulsar_destination_singularity_rule
        if: entity.params.get('singularity_enabled')
        params:
            singularity_volumes: '{ pulsar_singularity_volumes }'
            container_resolvers: 
                - type: explicit_singularity
                - type: mulled_singularity
            singularity_default_container_id: '{ singularity_default_container_id }'
        env:
          SINGULARITY_CACHEDIR: /mnt/pulsar/deps/singularity
          SINGULARITY_TMPDIR: /mnt/pulsar/deps/singularity/tmp
      - id: pulsar_destination_docker_rule
        if: entity.params.get('docker_enabled')
        params:
            docker_volumes: '{ pulsar_docker_volumes }'
            docker_set_user: '1000'
            docker_memory: '{mem}G'
            docker_sudo: false
  
  slurm:
    inherits: _slurm_destination
    runner: slurm
    context:
      destination_total_cores: 16
      destination_total_mem: 62.5
      shared_resource_destination_ids:
        - interactive_pulsar
    tags: {{ job_conf_limits.environments['slurm'].tags }}
    max_cores: 16
    max_mem: 62.5
    scheduling:
      accept:
        - slurm
  interactive_pulsar:
    runner: pulsar_embedded
    context:
      destination_total_cores: 16
      destination_total_mem: 62.5
    tags: {{ job_conf_limits.environments['interactive_pulsar'].tags }}
    max_accepted_cores: 8
    max_accepted_mem: 32
    params:
      submit_native_specification: "--nodes=1 --ntasks={cores} --ntasks-per-node={cores} --mem={round(mem*1024)} --partition={partition}"
      docker_enabled: true
      docker_volumes: $defaults
      docker_net: bridge
      docker_auto_rm: true
      docker_set_user: ''
      docker_require_container: true
      docker_memory: '{mem}G' # default dest
      docker_sudo: false # default dest
      outputs_to_working_directory: false
      container_monitor_result: callback
    scheduling:
      require:
        - interactive_pulsar
  pulsar_destination:
    inherits: _pulsar_destination
    runner: pulsar_au_01
    context:
      destination_total_cores: 2
      destination_total_mem: 7.76
    tags: {{ job_conf_limits.environments['pulsar_destination'].tags }}
    max_accepted_cores: 2
    max_accepted_mem: 7.76
    scheduling:
      accept:
        - dev-pulsar
      require:
        - pulsar
  pulsar-nci-test:
    inherits: _pulsar_destination
    runner: pulsar_nci_test_runner
    context:
      destination_total_cores: 32
      destination_total_mem: 96.38
    tags: {{ job_conf_limits.environments['pulsar-nci-test'].tags }}
    max_cores: 16
    max_mem: 48.19
    scheduling:
      accept:
        - general
        - pulsar-nci-test
      require:
        - pulsar
  pulsar-qld-gpu-dev:
    inherits: _pulsar_destination
    runner: pulsar_qldgpu_dev_runner
    context:
      destination_total_cores: 64
      destination_total_mem: 582
    tags: {{ job_conf_limits.environments['pulsar-qld-gpu-dev'].tags }}
    max_accepted_cores: 64
    max_accepted_mem: 582
    max_accepted_gpus: 1
    scheduling:
      accept:
        - pulsar-qld-gpu-dev
      require:
        - pulsar
    rules:
      - id: pulsar_destination_docker_rule
        params:
            docker_volumes: $job_directory:ro,$tool_directory:ro,$job_directory/outputs:rw,$working_directory:rw,/data/alphafold:/data:ro
            docker_set_user: '1000'
            docker_memory: '{mem}G'
            docker_sudo: false
  pulsar-cjb:
    runner: pulsar_cjb
    context:
      destination_total_cores: 4
      destination_total_mem: 15
    max_accepted_cores: 4
    max_accepted_mem: 15
    scheduling:
      require:
        - cjb-pulsar
    params:
      url: http://115.146.87.182:80
      private_token: "{{ vault_cjb_pulsar_private_token }}"
