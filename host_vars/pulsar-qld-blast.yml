hostname: "{{ ansible_hostname }}.usegalaxy.org.au"

# Keys and shares

create_ssh_key: yes  # Only the first time.
ssl_country: "AU"
ssl_state: "Qld"
ssl_location: "Brisbane"
ssl_organisation: "Galaxy Australia"
ssl_operational_unit: "Pulsar Qld blast"
ssl_email: "help@genome.edu.au"

#host specific pulsar settings

rabbitmq_password_galaxy_au: "{{ vault_rabbitmq_password_galaxy_qld_blast_prod }}"
pulsar_queue_url: "galaxy-queue.usegalaxy.org.au"
pulsar_rabbit_username: "galaxy_qld_blast"
pulsar_rabbit_vhost: "/pulsar/galaxy_qld_blast"

# cvmfs
cvmfs_cache_base: /mnt/var/lib/cvmfs
cvmfs_quota_limit: 1230000

# TODO: carefull remove telegraf_agent_output from everywhere and put it in all.yml
# Need to make sure that telegraf_influx_db_name is set properly everywhere
# Remove the variable auth_key_user because this is not used anywhere

telegraf_influx_db_name: "pulsar-special"

# Monitoring
telegraf_agent_output:
  - type: influxdb
    config:
      - urls = ["{{ grafana_server_url }}"]
      - database = "{{ telegraf_influx_db_name }}"
      - precision = "s"
      - username = "node"
      - password = "{{ vault_influx_node_password }}"

# SLURM
slurm_nodes:
    - name: pulsar-qld-blast
      NodeAddr: "{{ hostvars['pulsar-qld-blast']['ansible_ssh_host'] }}"
      CPUs: 60
      RealMemory: 200000
      State: UNKNOWN

slurm_partitions:
    - name: main
      nodes: "pulsar-qld-blast"
      Default: YES
      MaxTime: INFINITE
      State: UP

slurm_controller_host: pulsar-qld-blast

slurm_munge_key: files/keys/munge.key

extra_keys:
  - id: ubuntu_maintenance_key
    type: public
    from: "{{ hostvars['galaxy']['ansible_ssh_host'] }},{{ hostvars['galaxy-handlers']['ansible_ssh_host'] }},{{ hostvars['galaxy-backup']['ansible_ssh_host'] }}"

# docker
docker_daemon_options:
  data-root: /mnt/docker-data

# miniconda: stop pinning conda!

# this is to override what is in all.yml with the role default
miniconda_installer: >-
  Miniconda3-{{ 'py' ~ (miniconda_python | replace('.', '')) ~ '_' ~ miniconda_version if miniconda_installer_version != 'latest' else 'latest' }}-{{ miniconda_installer_os }}-{{ miniconda_installer_arch }}.sh

miniconda_version: latest

miniconda_base_env_packages: []
