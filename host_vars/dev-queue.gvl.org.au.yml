# Host specific Rabbit settings
rabbitmq_container:
  name: rabbit_hole
  image: rabbitmq:3.11-management
  hostname: "{{ inventory_hostname }}"

rabbitmq_config:
  listeners:
    tcp: none
  ssl_listeners:
    default: 5671
  ssl_options:
    verify: verify_peer
    cacertfile: /etc/ssl/certs/fullchain.pem
    certfile: /etc/ssl/certs/cert.pem
    keyfile: /etc/ssl/user/privkey-999:999.pem
    fail_if_no_peer_cert: 'false'
  management_agent:
    disable_metrics_collector: "false"
  management:
    disable_stats: 'false'
  consumer_timeout: 21600000 # 6 hours in milliseconds
  max_message_size: 536870912 # 512MB, max size allowed

rabbitmq_users:
  - user: admin
    password: "{{ rabbitmq_password_admin }}"
    tags: administrator
    vhost: /
  - user: telegraf
    password: "{{ rabbitmq_password_telegraf }}"
    tags: administrator
    vhost: /
  - user: galaxy
    password: "{{ rabbitmq_password_galaxy }}"
    vhost: galaxy
  - user: galaxy_au
    password: "{{ rabbitmq_password_galaxy_au }}"
    vhost: /pulsar/galaxy_au
  - user: galaxy_nci_test
    password: "{{ rabbitmq_password_galaxy_nci_test }}"
    vhost: /pulsar/galaxy_nci_test
  - user: galaxy_eu_gpu
    password: "{{ rabbitmq_password_galaxy_eu_gpu }}"
    vhost:  /pulsar/galaxy_eu_gpu
  - user: galaxy_azure_0
    password: "{{ rabbitmq_password_galaxy_azure_0 }}"
    vhost: /pulsar/galaxy_azure_0
  - user: galaxy_reservation_g2_xlarge_A
    password: "{{ rabbitmq_password_galaxy_reservation_g2_xlarge_A }}"
    vhost: /pulsar/galaxy_reservation_g2_xlarge_A
  - user: galaxy_reservation_g2_xlarge_B
    password: "{{ rabbitmq_password_galaxy_reservation_g2_xlarge_B }}"
    vhost: /pulsar/galaxy_reservation_g2_xlarge_B
  - user: galaxy_qldgpu_dev
    password: "{{ rabbitmq_password_galaxy_qldgpu_dev }}"
    vhost: /pulsar/galaxy_qldgpu_dev
  - user: galaxy_queues
    password: "{{ rabbitmq_password_galaxy }}"
    vhost: /galaxy/galaxy_queues
  - user: flower
    password: "{{ rabbitmq_password_galaxy }}"
    vhost: /galaxy/galaxy_queues
    tags: administrator

rabbitmq_vhosts:
  - galaxy
  - /pulsar/galaxy_au
  - /pulsar/galaxy_nci_test
  - /pulsar/galaxy_eu_gpu
  - /pulsar/galaxy_azure_0
  - /pulsar/galaxy_reservation_g2_xlarge_A
  - /pulsar/galaxy_reservation_g2_xlarge_B
  - /pulsar/galaxy_qldgpu_dev
  - /galaxy/galaxy_queues

rabbitmq_version: 3.12.1

rabbitmq_password_admin: "{{ vault_rabbitmq_password_admin_dev }}"
rabbitmq_password_telegraf: "{{ vault_rabbitmq_password_telegraf_dev }}"
rabbitmq_password_galaxy: "{{ vault_rabbitmq_password_galaxy_dev }}"
rabbitmq_password_galaxy_au: "{{ vault_rabbitmq_password_galaxy_au_dev }}"
rabbitmq_password_galaxy_nci_test: "{{ vault_rabbitmq_password_galaxy_nci_test }}"
rabbitmq_password_galaxy_eu_gpu: "{{ vault_rabbitmq_password_galaxy_eu_gpu }}"
rabbitmq_password_galaxy_azure_0: "{{ vault_rabbitmq_password_galaxy_azure_0 }}"
rabbitmq_password_galaxy_reservation_g2_xlarge_A: "{{ vault_rabbitmq_password_galaxy_reservation_g2_xlarge_A }}"
rabbitmq_password_galaxy_reservation_g2_xlarge_B: "{{ vault_rabbitmq_password_galaxy_reservation_g2_xlarge_B }}"
rabbitmq_password_galaxy_qldgpu_dev: "{{ vault_rabbitmq_password_galaxy_qldgpu_dev }}"

# Host specific Slurm settings
slurm_roles: ['controller', 'dbd']

add_hosts_workers: yes
add_hosts_handlers: yes
add_hosts_galaxy: yes

#Mariadb
mariadb_password_slurm: "{{ vault_mariadb_password_slurm }}"
mariadb_password_root: "{{ vault_mariadb_password_root }}"

# NGINX Letsencrypt bindings
nginx_selinux_allow_local_connections: true
nginx_servers:
  - redirect-ssl
nginx_enable_default_server: false
nginx_ssl_servers:
  - rabbitmq
nginx_conf_http:
  client_max_body_size: 1g
nginx_remove_default_vhost: true

nginx_ssl_role: usegalaxy_eu.certbot
nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-www-data.pem

nginx_check_conf: False

# Certbot
certbot_virtualenv_package_name: python3-virtualenv

certbot_auto_renew_hour: "{{ 23 |random(seed=inventory_hostname)  }}"
certbot_auto_renew_minute: "{{ 59 |random(seed=inventory_hostname)  }}"
certbot_auth_method: --webroot
certbot_install_method: virtualenv
certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_environment: production
certbot_well_known_root: /srv/nginx/_well-known_root
certbot_share_key_users:
  - www-data
certbot_share_key_ids:
  - "999:999"
certbot_post_renewal: |
    systemctl restart nginx || true
    docker restart rabbit_hole || true
certbot_domains:
 - "{{ hostname }}"
certbot_agree_tos: --agree-tos

#Install pip docker package for ansible
pip_install_packages:
  - name: docker

redis_requirepass: "{{ vault_redis_requirepass_dev }}"
redis_bind_interface: 0.0.0.0
