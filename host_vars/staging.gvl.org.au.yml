# Specific settings for galaxy staging application/web server

# variables for attaching mounted volume to application server
attached_volumes:
  - device: /dev/vdb
    path: /mnt
    fstype: ext4

certbot_domains:
  - "{{ hostname }}"
  - "*.interactivetoolentrypoint.interactivetool.{{ hostname }}"
  - "*.ep.interactivetool.{{ hostname }}"
  - "genome.{{ hostname }}"
  - "proteomics.{{ hostname }}"
  - "singlecell.{{ hostname }}"
certbot_dns_provider: cloudflare
certbot_dns_credentials:
  api_token: "{{ vault_dns_cloudflare_gvl_api_token }}"
certbot_dns_provider_propagation_seconds: 60

nginx_ssl_servers:
  - galaxy
  - galaxy-gie-proxy

#gie proxy hostname
interactive_tools_server_name: "{{ hostname }}"

galaxy_db_user_password: "{{ vault_staging_db_user_password }}"

# NFS stuff
nfs_exports:
  - "{{ galaxy_root }}  *(rw,async,no_root_squash,no_subtree_check)"

# ansible-galaxy
galaxy_repo: https://github.com/galaxyproject/galaxy.git
galaxy_commit_id: release_24.1

galaxy_infrastructure_url: "https://staging.gvl.org.au"

galaxy_dynamic_job_rules_src_dir: files/galaxy/dynamic_job_rules/staging
galaxy_dynamic_job_rules_dir: "{{ galaxy_root }}/dynamic_job_rules"
galaxy_dynamic_job_rules:
  - total_perspective_vortex/staging_tools.yml  # symlink to production tools.yml
  - total_perspective_vortex/staging_vortex_config.yml
  - total_perspective_vortex/staging_destinations.yml.j2
  - readme.txt

galaxy_systemd_mode: gravity
galaxy_systemd_env:
  [DRMAA_LIBRARY_PATH="/usr/lib/slurm-drmaa/lib/libdrmaa.so.1"]

galaxy_tools_indices_dir: "{{ galaxy_root }}"
galaxy_tmp_dir: "{{ galaxy_root }}/tmp"
galaxy_custom_indices_dir: "{{ galaxy_root }}/custom-indices"
galaxy_tus_upload_store: "{{ galaxy_tmp_dir }}/tus"

galaxy_job_working_directory: "{{ galaxy_tmp_dir }}/job_working_directory"

galaxy_file_path: "{{ galaxy_root }}/data-3"
nginx_upload_store_base_dir: "{{ galaxy_file_path }}/upload_store"
nginx_upload_store_dir: "{{ nginx_upload_store_base_dir }}/uploads"
nginx_upload_job_files_store_dir: "{{ nginx_upload_store_base_dir }}/job_files"

host_galaxy_config_templates:
  - src: "{{ galaxy_config_template_src_dir }}/config/staging_object_store_conf.yml.j2"
    dest: "{{ galaxy_config_dir }}/object_store_conf.yml"
  - src: "{{ galaxy_config_template_src_dir }}/config/oidc_backends_config.xml.j2"
    dest: "{{ galaxy_config_dir}}/oidc_backends_config.xml"
  - src: "{{ galaxy_config_template_src_dir }}/config/staging_job_conf.yml.j2"
    dest: "{{ galaxy_config_dir}}/job_conf.yml"
  - src: "{{ galaxy_config_template_src_dir }}/toolbox/filters/ga_filters.py.j2"
    dest: "{{ galaxy_toolbox_filters_dir }}/ga_filters.py"

host_galaxy_config_files:
  - src: "{{ galaxy_config_file_src_dir }}/config/oidc_config.xml"
    dest: "{{ galaxy_config_dir}}/oidc_config.xml"
  - src: "{{ galaxy_config_file_src_dir }}/config/trs_servers_conf.yml"
    dest: "{{ galaxy_config_dir }}/trs_servers_conf.yml"
  - src: "{{ galaxy_config_file_src_dir }}/config/tool_panel_filters/proteomics.yml"
    dest: "{{ galaxy_config_dir }}/tool_panel_filters/proteomics.yml"
  - src: "{{ galaxy_config_file_src_dir }}/config/tool_panel_filters/singlecell.yml"
    dest: "{{ galaxy_config_dir }}/tool_panel_filters/singlecell.yml"

galaxy_handler_count: 2 ############# europe uses 5, this could be host specific

# galaxy vault key
galaxy_vault_encryption_key: "{{ vault_galaxy_vault_encryption_key_nonprod }}"

host_galaxy_config: # renamed from __galaxy_config
  gravity:
    process_manager: systemd
    galaxy_root: "{{ galaxy_server_dir }}"
    galaxy_user: "{{ galaxy_user.name }}"
    app_server: gunicorn
    virtualenv: "{{ galaxy_venv_dir }}"
    gunicorn:
      - bind: "unix:{{ galaxy_mutable_config_dir }}/gunicorn.sock"
        # performance options
        workers: 2
        # Other options that will be passed to gunicorn
        extra_args: '--forwarded-allow-ips="*"'
        preload: true
        environment: "{{ galaxy_process_env }}"
    celery:
      concurrency: 2
      loglevel: DEBUG
    handlers:
      handler:
        environment: "{{ galaxy_process_env }}"
        processes: 2
        pools:
          - job-handlers
          - workflow-schedulers
    tusd:
      enable: true
      tusd_path: /usr/local/sbin/tusd
      upload_dir: "{{ galaxy_tus_upload_store }}"
    gx_it_proxy:
      enable: true
      version: '>=0.0.5'  # default from galaxy.yml.sample
      ip: "{{ gie_proxy_ip }}"
      port: "{{ gie_proxy_port }}"
      sessions: "{{ gie_proxy_sessions_path }}"
      verbose: true
    reports:
      enable: true
      url_prefix: /reports
      bind: "unix:{{ galaxy_mutable_config_dir }}/reports.sock"
      config_file: "{{ galaxy_config_dir }}/reports.yml"

  galaxy:
    admin_users: "{{ machine_users | selectattr('email', 'defined') | selectattr('roles', 'contains', 'galaxy_admin') | map(attribute='email') | join(',') }}"
    brand: "Australia Staging"
    database_connection: "postgresql://galaxy:{{ vault_staging_db_user_password }}@staging-db.gvl.org.au:5432/galaxy"
    id_secret: "{{ vault_staging_id_secret }}"
    file_path: "{{ galaxy_file_path }}"
    object_store_config_file: "{{ galaxy_config_dir }}/object_store_conf.yml"
    interactivetools_enable: true
    interactivetools_map: "{{ gie_proxy_sessions_path }}"
    enable_oidc: true
    oidc_config_file: "{{ galaxy_config_dir }}/oidc_config.xml"
    oidc_backends_config_file: "{{ galaxy_config_dir }}/oidc_backends_config.xml"
    job_config_file: "{{ galaxy_config_dir }}/job_conf.yml"
    # nginx upload module
    nginx_upload_store: "{{ nginx_upload_store_dir }}"
    nginx_upload_path: "/_upload"
    nginx_upload_job_files_store: "{{ nginx_upload_job_files_store_dir }}"
    nginx_upload_job_files_path: "/_job_files"
    watch_job_rules: true # important for total perspective vortex
    enable_mulled_containers: true
    enable_beta_containers_interface: true
    tool_filters: ga_filters:hide_test_tools
    #TRS - workflowhub
    trs_servers_config_file: "{{ galaxy_config_dir }}/trs_servers_conf.yml"
    # TUS
    tus_upload_store: "{{ galaxy_tus_upload_store }}"
    # For subdomains
    tool_section_filters: global_host_filters:per_host_tool_sections
    tool_label_filters: global_host_filters:per_host_tool_labels

    # Panel views / themes
    panel_views_dir: "{{ galaxy_config_dir }}/tool_panel_filters"
    default_panel_view_by_host:
      proteomics.staging.gvl.org.au: proteomics
      singlecell.staging.gvl.org.au: singlecell
    themes_config_file_by_host:
      genome.staging.gvl.org.au: "{{ galaxy_config_dir }}/themes/themes_genome.yml"
      proteomics.staging.gvl.org.au: "{{ galaxy_config_dir }}/themes/themes_proteomics.yml"
      singlecell.staging.gvl.org.au: "{{ galaxy_config_dir }}/themes/themes_singlecell.yml"
      staging.gvl.org.au: "{{ galaxy_config_dir }}/themes/themes_main.yml"

# cvmfs
cvmfs_cache_base: /mnt/var/lib/cvmfs

# vars for setting up .pgpass
pg_db_password:
  galaxy: "{{ vault_staging_db_user_password }}"
  reader: "{{ vault_staging_db_reader_password }}"
  tiaasadmin: "{{ vault_staging_db_tiaasadmin_password }}"
db_address: "staging-db.gvl.org.au"
gxadmin_ubuntu_config_dir: /home/ubuntu/.config

# AAF specific settings
aaf_issuer_url: "{{ vault_aaf_issuer_url_staging }}"
aaf_client_id: "{{ vault_aaf_client_id_staging }}"
aaf_client_secret: "{{ vault_aaf_client_secret_staging }}"

# Docker
docker_users:
  - "{{ galaxy_user.name }}"
docker_daemon_options:
  data-root: /mnt/docker-data

# Singularity and docker volumes
slurm_singularity_volumes_list:
  - "$job_directory:rw"
  - "$galaxy_root:ro"
  - "$tool_directory:ro"
  - "{{ galaxy_root }}/data:ro"
  - "{{ galaxy_root }}/data-2:ro"
  - "{{ galaxy_root }}/data-3:ro"
  - "/cvmfs/data.galaxyproject.org:ro"
  - "/tmp:rw"

pulsar_singularity_volumes_list:
  - "$job_directory:rw"
  - "$tool_directory:ro"
  - "/cvmfs/data.galaxyproject.org:ro"
  - "/tmp:rw"

slurm_docker_volumes_list: "{{ slurm_singularity_volumes_list }}"
pulsar_docker_volumes_list: "{{ pulsar_singularity_volumes_list }}"

# comma separated strings for the job conf
slurm_singularity_volumes: "{{ slurm_singularity_volumes_list | join(',') }}"
pulsar_singularity_volumes: "{{ pulsar_singularity_volumes_list | join(',') }}"
slurm_docker_volumes: "{{ slurm_docker_volumes_list | join(',') }}"
pulsar_docker_volumes: "{{ pulsar_docker_volumes_list | join(',') }}"

singularity_default_container_id: "/cvmfs/singularity.galaxyproject.org/all/python:3.8.3"
# TIaaS specific settings
tiaas_repo: "https://github.com/neoformit/tiaas2"
tiaas_galaxy_db_host: "staging-db.gvl.org.au"
tiaas_galaxy_db_port: "5432"
tiaas_galaxy_db_user: "tiaasadmin"
tiaas_galaxy_db_pass: "{{ vault_staging_db_tiaasadmin_password }}"
tiaas_info:
  owner: "Galaxy Australia staging"
  owner_email: help@genome.edu.au
  owner_site: "https://site.usegalaxy.org.au"
  domain: "https://staging.gvl.org.au"

# Create a cron job to disassociate training roles from groups after trainings have expired, set to `false` to disable
tiaas_disassociate_training_roles:
  hour: 9 # optional, defaults to 0
  minute: 0 # optional, defaults to 0

tiaas_show_advertising: false
tiaas_retain_contact_consent: false

# Templates to override web content:
tiaas_templates_dir: files/tiaas/html
# Static files referenced by above templates:
tiaas_extra_static_dir: files/tiaas/static

# host-specific settings for postfix
postfix_host_domain: "staging.gvl.org.au"
postfix_hostname: "staging"
smtp_login: "{{ vault_smtp_login_staging }}"
smtp_password: "{{ vault_smtp_password_staging }}"

# subdomains
galaxy_subsite_base_domain: "staging.gvl.org.au"
galaxy_subsite_default_welcome: "https://site.usegalaxy.org.au"
galaxy_subsite_dir: /mnt/galaxy/subsites
galaxy_subsites:
  - name: genome
    brand: Genome Lab
    iframe: "https://labs.usegalaxy.org.au/?content_root=https://github.com/galaxyproject/galaxy_codex/blob/main/communities/genome/lab/usegalaxy.org.au.yml"
    wallpaper: false # If wallpaper is true, then files/subsites/{name}.png will be copied to /static/dist/{name}.png, and can be used exactly like that in the CSS.
    tool_sections: []
    custom_css: |
      #masthead .navbar-nav>li.active {
        background: #2c3067 !important;
      }
      #masthead {
        background: #3a3e87 !important;
      }
      #masthead a.navbar-brand::after {
        content: "Australia - Genome Lab";
      }
      #masthead .navbar-text {
        display: none;
      }
  - name: proteomics
    hidden: true
    brand: Proteomics lab
    iframe: "https://labs.usegalaxy.org.au/?content_root=https://github.com/galaxyproject/galaxy_codex/blob/main/communities/proteomics/lab/usegalaxy.org.au.yml"
    wallpaper: false # If wallpaper is true, then files/subsites/{name}.png will be copied to /static/dist/{name}.png, and can be used exactly like that in the CSS.
    tool_sections: []
    custom_css: |
      #masthead .navbar-nav>li.active {
        background: #402668 !important;
      }
      #masthead {
        background: #542a95 !important;
      }
      #masthead a.navbar-brand::after {
        content: "Australia - Proteomics Lab";
      }
      #masthead .navbar-text {
        display: none;
      }
  - name: singlecell
    brand: Single Cell Lab
    iframe: "https://labs.usegalaxy.org.au/?content_root=https://github.com/galaxyproject/galaxy_codex/blob/main/communities/spoc/lab/usegalaxy.org.au.yml"
    wallpaper: false
    tool_sections: []
    custom_css: |
      #masthead .navbar-nav>li.active {
        background: #236c6f !important;
      }
      #masthead {
        background: #209693 !important;
      }
      #masthead a.navbar-brand::after {
        content: "Australia - Single Cell Lab";
      }
      #masthead .navbar-text {
        display: none;
      }

webhook_plugins:
  - subdomain_switcher
  - toolmsg
  # These ones aren't in the playbook as they are included in the galaxy repo:
  - demo
  - gtn
  - news

toolmsg_messages:
# - tool_id: to match subject.startsWith(tool_id)
#            Best to use remove version numbers and trailing slash
#            e.g. toolshed.g2.bx.psu.edu/repos/galaxyp/diann/diann
#   message: A custom HTML message to be displayed for this tool
#   class: bootstrap class [primary, info, success, warning, danger]

  - tool_id: toolshed.g2.bx.psu.edu/repos/galaxyp/diann/diann
    message: >
      Access rights to this tool have changed, please
      <a href="https://site.usegalaxy.org.au/request/access/diann"
         target="_blank"
      >
        apply for access
      </a>
      to continue using this tool.
    class: warning

walle_user_name: ubuntu
walle_user_group: ubuntu
walle_tool: interactive_tool
walle_virtualenv: "{{ galaxy_venv_dir }}"
walle_bashrc: "{{ galaxy_root }}/walle/.bashrc"
walle_malware_database_location: "{{ galaxy_root }}/walle"
walle_filesize_min: 0
walle_verbose: false
walle_kill: false
walle_slack_alerts: true
walle_slack_api_token: "{{ vault_walle_slack_api_token }}"
walle_slack_channel_id: "{{ vault_walle_slack_channel_id }}"
walle_cron_minute: "0"
walle_extra_env_vars:
  GALAXY_PULSAR_APP_CONF: "{{ galaxy_config_dir }}/pulsar_app.yml"
  PGHOST: "{{ db_address }}"
